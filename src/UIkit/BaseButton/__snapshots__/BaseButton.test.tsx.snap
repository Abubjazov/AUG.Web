// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`BaseButton > should render BaseButton default 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        Base Button
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _outlined-white_91d6ec  "
      data-testid="base-button"
      type="button"
    >
      Base Button
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton disabled 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
        data-testid="base-button"
        disabled=""
        type="button"
      >
        Base Button
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
      data-testid="base-button"
      disabled=""
      type="button"
    >
      Base Button
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton disabled 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
        data-testid="base-button"
        disabled=""
        type="button"
      >
        Base Button
      </button>
    </div>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
        data-testid="base-button"
        disabled=""
        type="button"
      >
        Base Button
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
      data-testid="base-button"
      disabled=""
      type="button"
    >
      Base Button
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton mode: "contained-blue" 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _contained-blue_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        Base Button
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _contained-blue_91d6ec  "
      data-testid="base-button"
      type="button"
    >
      Base Button
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton mode: "contained-red" 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _contained-red_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        Base Button
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _contained-red_91d6ec  "
      data-testid="base-button"
      type="button"
    >
      Base Button
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton mode: "outlined" 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        Base Button
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _outlined-white_91d6ec  "
      data-testid="base-button"
      type="button"
    >
      Base Button
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton skeleton 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _outlined-white_91d6ec  "
      data-testid="base-button"
      type="button"
    >
      <svg
        class="small-spinner"
        height="20"
        preserveAspectRatio="xMidYMid"
        viewBox="0 0 100 100"
        width="20"
      >
        <path
          d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
          fill="none"
          stroke="#fff"
          stroke-dasharray="42.76482137044271 42.76482137044271"
          stroke-linecap="round"
          stroke-width="8"
        >
          <animate
            attributeName="stroke-dashoffset"
            dur="1s"
            keyTimes="0;1"
            repeatCount="indefinite"
            values="0;256.58892822265625"
          />
        </path>
      </svg>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton skeleton 2`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
        data-testid="base-button"
        disabled=""
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
      data-testid="base-button"
      disabled=""
      type="button"
    >
      <svg
        class="small-spinner"
        height="20"
        preserveAspectRatio="xMidYMid"
        viewBox="0 0 100 100"
        width="20"
      >
        <path
          d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
          fill="none"
          stroke="#fff"
          stroke-dasharray="42.76482137044271 42.76482137044271"
          stroke-linecap="round"
          stroke-width="8"
        >
          <animate
            attributeName="stroke-dashoffset"
            dur="1s"
            keyTimes="0;1"
            repeatCount="indefinite"
            values="0;256.58892822265625"
          />
        </path>
      </svg>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton skeleton 3`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
        data-testid="base-button"
        disabled=""
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
    <div>
      <button
        class="_root_91d6ec _contained-blue_91d6ec _disabled_91d6ec "
        data-testid="base-button"
        disabled=""
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _contained-blue_91d6ec _disabled_91d6ec "
      data-testid="base-button"
      disabled=""
      type="button"
    >
      <svg
        class="small-spinner"
        height="20"
        preserveAspectRatio="xMidYMid"
        viewBox="0 0 100 100"
        width="20"
      >
        <path
          d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
          fill="none"
          stroke="#fff"
          stroke-dasharray="42.76482137044271 42.76482137044271"
          stroke-linecap="round"
          stroke-width="8"
        >
          <animate
            attributeName="stroke-dashoffset"
            dur="1s"
            keyTimes="0;1"
            repeatCount="indefinite"
            values="0;256.58892822265625"
          />
        </path>
      </svg>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`BaseButton > should render BaseButton skeleton 4`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
    <div>
      <button
        class="_root_91d6ec _outlined-white_91d6ec _disabled_91d6ec "
        data-testid="base-button"
        disabled=""
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
    <div>
      <button
        class="_root_91d6ec _contained-blue_91d6ec _disabled_91d6ec "
        data-testid="base-button"
        disabled=""
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
    <div>
      <button
        class="_root_91d6ec _contained-red_91d6ec  "
        data-testid="base-button"
        type="button"
      >
        <svg
          class="small-spinner"
          height="20"
          preserveAspectRatio="xMidYMid"
          viewBox="0 0 100 100"
          width="20"
        >
          <path
            d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
            fill="none"
            stroke="#fff"
            stroke-dasharray="42.76482137044271 42.76482137044271"
            stroke-linecap="round"
            stroke-width="8"
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="1s"
              keyTimes="0;1"
              repeatCount="indefinite"
              values="0;256.58892822265625"
            />
          </path>
        </svg>
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="_root_91d6ec _contained-red_91d6ec  "
      data-testid="base-button"
      type="button"
    >
      <svg
        class="small-spinner"
        height="20"
        preserveAspectRatio="xMidYMid"
        viewBox="0 0 100 100"
        width="20"
      >
        <path
          d="M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40 C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z"
          fill="none"
          stroke="#fff"
          stroke-dasharray="42.76482137044271 42.76482137044271"
          stroke-linecap="round"
          stroke-width="8"
        >
          <animate
            attributeName="stroke-dashoffset"
            dur="1s"
            keyTimes="0;1"
            repeatCount="indefinite"
            values="0;256.58892822265625"
          />
        </path>
      </svg>
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
